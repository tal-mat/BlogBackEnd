warning: in the working copy of 'dist/BL/PostBL.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/BL/UserBL.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/DAL/PostRepository.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/DAL/UserRepository.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/Index.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/controllers/UserController.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/errors/CustomErrors.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/middlewares/activityLogger.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/middlewares/addUserHandler.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/routes/oauthRoute.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/routes/requestRoute.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/routes/usersRoute.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'dist/tests/e2e.test.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/.package-lock.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/CHANGELOG.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/baseexternalclient.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/baseexternalclient.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/downscopedclient.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/googleauth.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/googleauth.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/jwtclient.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/oauth2client.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/oauth2client.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/refreshclient.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/stscredentials.d.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/build/src/auth/stscredentials.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'node_modules/google-auth-library/package.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'package-lock.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'package.json', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex e69de29..181d7e5 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m.scripts/[m
[32m+[m[32m.dal/DBConnect.ts[m
\ No newline at end of file[m
[1mdiff --git a/BL/UserBL.ts b/BL/UserBL.ts[m
[1mindex 35966b0..53ee364 100644[m
[1m--- a/BL/UserBL.ts[m
[1m+++ b/BL/UserBL.ts[m
[36m@@ -80,5 +80,22 @@[m [mexport class UserBL {[m
         }[m
     }[m
 [m
[32m+[m[32m    async checkUserIsValid(email: string): Promise<boolean> {[m
[32m+[m[32m        try {[m
[32m+[m[32m            const check = await this.userDataAccess.checkUserIsValid(email);[m
[32m+[m[32m            return check;[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            // @ts-ignore[m
[32m+[m[32m            console.error('Error in checkUserIsValid in BL:', error.message);[m
[32m+[m
[32m+[m[32m            if (error instanceof DuplicateEmailError) {[m
[32m+[m[32m                throw new DuplicateEmailError(error.message);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                // @ts-ignore[m
[32m+[m[32m                throw new Error(error.message);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
 [m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Index.ts b/Index.ts[m
[1mindex e8a34e7..5ced318 100644[m
[1m--- a/Index.ts[m
[1m+++ b/Index.ts[m
[36m@@ -16,7 +16,7 @@[m [mapp.use(express.json());[m
 [m
 app.use(activityLogger);[m
 [m
[31m-app.use(addUserHandler);[m
[32m+[m[32m// app.use(addUserHandler);[m
 [m
 app.use("/posts", postsRoute);[m
 [m
[1mdiff --git a/controllers/UserController.ts b/controllers/UserController.ts[m
[1mindex b7e4860..749eae0 100644[m
[1m--- a/controllers/UserController.ts[m
[1m+++ b/controllers/UserController.ts[m
[36m@@ -133,5 +133,36 @@[m [mexport class UserController {[m
         }[m
     }[m
 [m
[32m+[m[32m    async checkUserIsValid(req: Request, res: Response): Promise<void> {[m
[32m+[m[32m        const email = req.query.email as string;[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            const check = await this.userBL.checkUserIsValid(email);[m
[32m+[m[32m            if (check === true) {[m
[32m+[m[32m                res.status(200).json({ check });[m
[32m+[m[32m            } else {[m
[32m+[m[32m                throw new Error("An unexpected error occurred");[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error('Error in checkUserIsValid:', error);[m
[32m+[m
[32m+[m[32m            let statusCode: number;[m
[32m+[m[32m            let errorType: string;[m
[32m+[m[32m            let errorMessage: string;[m
[32m+[m
[32m+[m[32m            if (error instanceof DuplicateEmailError) {[m
[32m+[m[32m                statusCode = 409;[m
[32m+[m[32m                errorType = 'DuplicateEmailError';[m
[32m+[m[32m                errorMessage = 'Duplicate email';[m
[32m+[m[32m            } else {[m
[32m+[m[32m                statusCode = 500; // Default to Internal Server Error[m
[32m+[m[32m                errorType = 'InternalServerError';[m
[32m+[m[32m                errorMessage = 'An unexpected error occurred';[m
[32m+[m[32m            }[m
[32m+[m[32m            res.status(statusCode).json({ error: errorMessage, errorType, details: (error as Error).message });[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
 [m
 }[m
\ No newline at end of file[m
[1mdiff --git a/dal/UserRepository.ts b/dal/UserRepository.ts[m
[1mindex 89f9e6b..c44e8d9 100644[m
[1m--- a/dal/UserRepository.ts[m
[1m+++ b/dal/UserRepository.ts[m
[36m@@ -112,6 +112,20 @@[m [mexport class UserRepository implements DataAccess<User> {[m
         return user;[m
     }[m
 [m
[32m+[m[32m    async checkUserIsValid(email: string): Promise<boolean> {[m
[32m+[m[32m        // if (!email || typeof email !== 'string') {[m
[32m+[m[32m        //     throw new Error('Email must be non-empty strings.');[m
[32m+[m[32m        // }[m
[32m+[m
[32m+[m[32m        const emailExists = await this.userExistsWithEmail(email);[m
[32m+[m
[32m+[m[32m        if (emailExists) {[m
[32m+[m[32m            throw new DuplicateEmailError(email);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
     private async userExistsWithUsername(username: string): Promise<boolean> {[m
         const query = 'SELECT * FROM public."user" WHERE username = $1';[m
         const result = await pool.query(query, [username]);[m
[1mdiff --git a/dist/BL/PostBL.js b/dist/BL/PostBL.js[m
[1mindex 1d58ab4..92eb40a 100644[m
[1m--- a/dist/BL/PostBL.js[m
[1m+++ b/dist/BL/PostBL.js[m
[36m@@ -37,13 +37,6 @@[m [mclass PostBL {[m
             return post;[m
         });[m
     }[m
[31m-    // async getPosts(from?: number | null, to?: number | null, filterText?: string | null): Promise<Post[]> {[m
[31m-    //     const posts = await this.postDataAccess.getItems(from, to, filterText);[m
[31m-    //     if (!posts) {[m
[31m-    //         throw new Error(`Posts were not found`);[m
[31m-    //     }[m
[31m-    //     return posts;[m
[31m-    // }[m
     getPosts(from, to, filterText, lastName) {[m
         return __awaiter(this, void 0, void 0, function* () {[m
             const posts = yield this.postDataAccess.getItems(from, to, filterText, lastName);[m
[1mdiff --git a/dist/BL/UserBL.js b/dist/BL/UserBL.js[m
[1mindex 095fcd8..5ace92c 100644[m
[1m--- a/dist/BL/UserBL.js[m
[1m+++ b/dist/BL/UserBL.js[m
[36m@@ -91,5 +91,24 @@[m [mclass UserBL {[m
             }[m
         });[m
     }[m
[32m+[m[32m    checkUserIsValid(email) {[m
[32m+[m[32m        return __awaiter(this, void 0, void 0, function* () {[m
[32m+[m[32m            try {[m
[32m+[m[32m                const check = yield this.userDataAccess.checkUserIsValid(email);[m
[32m+[m[32m                return check;[m
[32m+[m[32m            }[m
[32m+[m[32m            catch (error) {[m
[32m+[m[32m                // @ts-ignore[m
[32m+[m[32m                console.error('Error in checkUserIsValid in BL:', error.message);[m
[32m+[m[32m                if (error instanceof CustomErrors_1.DuplicateEmailError) {[m
[32m+[m[32m                    throw new CustomErrors_1.DuplicateEmailError(error.message);[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    // @ts-ignore[m
[32m+[m[32m                    throw new Error(error.message);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
 }[m
 exports.UserBL = UserBL;[m
[1mdiff --git a/dist/DAL/PostRepository.js b/dist/DAL/PostRepository.js[m
[1mindex a39e570..10a2789 100644[m
[1m--- a/dist/DAL/PostRepository.js[m
[1m+++ b/dist/DAL/PostRepository.js[m
[36m@@ -59,41 +59,8 @@[m [mclass PostRepository {[m
             return result.rows[0];[m
         });[m
     }[m
[31m-    // async getItems(from?: number | null, to?: number | null, filterText?: string | null): Promise<Post[]> {[m
[31m-    //     // Replace "NaN" with null[m
[31m-    //     const sanitizedFrom = isNaN(from as number) ? null : from;[m
[31m-    //     const sanitizedTo = isNaN(to as number) ? null : to;[m
[31m-    //[m
[31m-    //     //         SELECT "id", "title", "imageUrl"[m
[31m-    //     const query = `[m
[31m-    //     SELECT *[m
[31m-    //     FROM post[m
[31m-    //     WHERE[m
[31m-    //       (("id" BETWEEN $1 AND $2) OR ($1 IS NULL AND $2 IS NULL))[m
[31m-    //       AND (LOWER("title") LIKE LOWER($3) OR $3 IS NULL);[m
[31m-    // `;[m
[31m-    //[m
[31m-    //     const result = await pool.query(query, [sanitizedFrom, sanitizedTo, `%${filterText}%`]);[m
[31m-    //[m
[31m-    //     if (result.rows.length === 0) {[m
[31m-    //         throw new Error(`No posts found`);[m
[31m-    //     }[m
[31m-    //[m
[31m-    //     // Directly return the array of posts[m
[31m-    //     return result.rows as Post[];[m
[31m-    // }[m
     getItems(from, to, filterText, lastName) {[m
         return __awaiter(this, void 0, void 0, function* () {[m
[31m-            // console.log('Parameters before execution:', {[m
[31m-            //     'from': from,[m
[31m-            //     'to': to,[m
[31m-            //     'filterText': filterText,[m
[31m-            //     'lastName': lastName,[m
[31m-            // });[m
[31m-            // Try to run a simple test query to check the database connection[m
[31m-            const testQuery = 'SELECT 1;';[m
[31m-            const testResult = yield DBConnect_1.default.query(testQuery);[m
[31m-            // console.log('Test Result:', testResult.rows);[m
             // Query with conditions and inner join to users[m
             const conditions = [];[m
             const params = [];[m
[36m@@ -116,12 +83,8 @@[m [mclass PostRepository {[m
         INNER JOIN public.user AS U ON P."postedBy" = U."id"[m
         ${whereClause};[m
     `;[m
[31m-            // console.log('Query:', query);[m
[31m-            // Execute the query with conditions and inner join[m
             const result = yield DBConnect_1.default.query(query, params);[m
             if (result.rows.length === 0) {[m
[31m-                // Handle no results if needed[m
[31m-                // throw new Error('No posts found.');[m
             }[m
             return result.rows;[m
         });[m
[1mdiff --git a/dist/DAL/UserRepository.js b/dist/DAL/UserRepository.js[m
[1mindex f0d1e47..6ceed9e 100644[m
[1m--- a/dist/DAL/UserRepository.js[m
[1m+++ b/dist/DAL/UserRepository.js[m
[36m@@ -107,6 +107,18 @@[m [mclass UserRepository {[m
             return user;[m
         });[m
     }[m
[32m+[m[32m    checkUserIsValid(email) {[m
[32m+[m[32m        return __awaiter(this, void 0, void 0, function* () {[m
[32m+[m[32m            // if (!email || typeof email !== 'string') {[m
[32m+[m[32m            //     throw new Error('Email must be non-empty strings.');[m
[32m+[m[32m            // }[m
[32m+[m[32m            const emailExists = yield this.userExistsWithEmail(email);[m
[32m+[m[32m            if (emailExists) {[m
[32m+[m[32m                throw new CustomErrors_1.DuplicateEmailError(email);[m
[32m+[m[32m            }[m
[32m+[m[32m            return true;[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
     userExistsWithUsername(username) {[m
         return __awaiter(this, void 0, void 0, function* () {[m
             const query = 'SELECT * FROM public."user" WHERE username = $1';[m
[1mdiff --git a/dist/Index.js b/dist/Index.js[m
[1mindex 3ee6332..60c7ac9 100644[m
[1m--- a/dist/Index.js[m
[1m+++ b/dist/Index.js[m
[36m@@ -7,7 +7,6 @@[m [mexports.app = void 0;[m
 const express_1 = __importDefault(require("express"));[m
 const cors_1 = __importDefault(require("cors"));[m
 const activityLogger_1 = __importDefault(require("./middlewares/activityLogger"));[m
[31m-const addUserHandler_1 = __importDefault(require("./middlewares/addUserHandler"));[m
 const postsRoute_1 = __importDefault(require("./routes/postsRoute"));[m
 const usersRoute_1 = __importDefault(require("./routes/usersRoute"));[m
 const oauthRoute_1 = __importDefault(require("./routes/oauthRoute"));[m
[36m@@ -17,7 +16,7 @@[m [mconst port = 4000;[m
 exports.app.use((0, cors_1.default)());[m
 exports.app.use(express_1.default.json());[m
 exports.app.use(activityLogger_1.default);[m
[31m-exports.app.use(addUserHandler_1.default);[m
[32m+[m[32m// app.use(addUserHandler);[m
 exports.app.use("/posts", postsRoute_1.default);[m
 exports.app.use("/users", usersRoute_1.default);[m
 exports.app.use("/requests", requestRoute_1.default);[m
[1mdiff --git a/dist/controllers/UserController.js b/dist/controllers/UserController.js[m
[1mindex c2db273..d14e283 100644[m
[1m--- a/dist/controllers/UserController.js[m
[1m+++ b/dist/controllers/UserController.js[m
[36m@@ -22,9 +22,7 @@[m [mclass UserController {[m
     addUser(req, res) {[m
         return __awaiter(this, void 0, void 0, function* () {[m
             const userData = req.body;[m
[31m-            console.log("userData in controller :", userData);[m
             const user = new User_1.default(userData.id, userData.firstName, userData.lastName, userData.username, userData.password, userData.email, userData.birthDate, userData.gender, userData.address, userData.phoneNumber, userData.registrationDate, userData.accountStatus, userData.role);[m
[31m-            console.log("new user in controller :", user);[m
             try {[m
                 yield this.userBL.addUser(user);[m
                 res.status(201).json({ message: 'User created successfully' });[m
[36m@@ -49,7 +47,6 @@[m [mclass UserController {[m
                     errorType = 'InternalServerError';[m
                     errorMessage = 'An unexpected error occurred';[m
                 }[m
[31m-                console.log(`Responding with status ${statusCode} and error: ${errorMessage}`);[m
                 res.status(statusCode).json({ error: errorMessage, errorType, details: error.message });[m
             }[m
         });[m
[36m@@ -133,5 +130,36 @@[m [mclass UserController {[m
             }[m
         });[m
     }[m
[32m+[m[32m    checkUserIsValid(req, res) {[m
[32m+[m[32m        return __awaiter(this, void 0, void 0, function* () {[m
[32m+[m[32m            const email = req.query.email;[m
[32m+[m[32m            try {[m
[32m+[m[32m                const check = yield this.userBL.checkUserIsValid(email);[m
[32m+[m[32m                if (check === true) {[m
[32m+[m[32m                    res.status(200).json({ check });[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    throw new Error("An unexpected error occurred");[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            catch (error) {[m
[32m+[m[32m                console.error('Error in checkUserIsValid:', error);[m
[32m+[m[32m                let statusCode;[m
[32m+[m[32m                let errorType;[m
[32m+[m[32m                let errorMessage;[m
[32m+[m[32m                if (error instanceof CustomErrors_1.DuplicateEmailError) {[m
[32m+[m[32m                    statusCode = 409;[m
[32m+[m[32m                    errorType = 'DuplicateEmailError';[m
[32m+[m[32m                    errorMessage = 'Duplicate email';[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    statusCode = 500; // Default to Internal Server Error[m
[32m+[m[32m                    errorType = 'InternalServerError';[m
[32m+[m[32m                    errorMessage = 'An unexpected error occurred';[m
[32m+[m[32m                }[m
[32m+[m[32m                res.status(statusCode).json({ error: errorMessage, errorType, details: error.message });[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
 }[m
 exports.UserController = UserController;[m
[1mdiff --git a/dist/errors/CustomErrors.js b/dist/errors/CustomErrors.js[m
[1mindex eae1c5f..f8ea614 100644[m
[1m--- a/dist/errors/CustomErrors.js[m
[1m+++ b/dist/errors/CustomErrors.js[m
[36m@@ -1,7 +1,6 @@[m
 "use strict";[m
 Object.defineProperty(exports, "__esModule", { value: true });[m
 exports.DuplicateEmailError = exports.DuplicateUsernameError = exports.IncorrectPasswordError = exports.UserNotFoundError = void 0;[m
[31m-// "../errors/CustomErrors";[m
 class UserNotFoundError extends Error {[m
     constructor(username) {[m
         super(`User with username '${username}' not found`);[m
[1mdiff --git a/dist/middlewares/activityLogger.js b/dist/middlewares/activityLogger.js[m
[1mindex 144757f..7f4378b 100644[m
[1m--- a/dist/middlewares/activityLogger.js[m
[1m+++ b/dist/middlewares/activityLogger.js[m
[36m@@ -1,5 +1,4 @@[m
 "use strict";[m
[31m-// activityLogger.ts[m
 Object.defineProperty(exports, "__esModule", { value: true });[m
 const activityLogger = (req, res, next) => {[m
     const timestamp = new Date().toISOString();[m
[1mdiff --git a/dist/middlewares/addUserHandler.js b/dist/middlewares/addUserHandler.js[m
[1mindex e88714b..8d31279 100644[m
[1m--- a/dist/middlewares/addUserHandler.js[m
[1m+++ b/dist/middlewares/addUserHandler.js[m
[36m@@ -8,7 +8,6 @@[m [mconst addUserHandler = (req, res, next) => {[m
         }[m
         console.log('Adding user:', userData);[m
     }[m
[31m-    // Call next to continue the request processing[m
     next();[m
 };[m
 exports.default = addUserHandler;[m
[1mdiff --git a/dist/routes/oauthRoute.js b/dist/routes/oauthRoute.js[m
[1mindex 2853bf0..bc97a4c 100644[m
[1m--- a/dist/routes/oauthRoute.js[m
[1m+++ b/dist/routes/oauthRoute.js[m
[36m@@ -22,7 +22,6 @@[m [mfunction getUsersData(access_token) {[m
     return __awaiter(this, void 0, void 0, function* () {[m
         const response = yield fetch(`https://www.googleapis.com/oauth2/v3/userinfo?access_token=${access_token}`);[m
         const data = yield response.json();[m
[31m-        // console.log('data', data);[m
         return data;[m
     });[m
 }[m
[36m@@ -54,7 +53,6 @@[m [mfunction sendUserData(userData) {[m
             });[m
             if (response.ok) {[m
                 console.log('User data successfully sent.');[m
[31m-                // Return the username and password[m
                 return { username: newUser.username, password: newUser.password };[m
             }[m
             else {[m
[36m@@ -93,28 +91,46 @@[m [mrouter.get('/', function (req, res, next) {[m
             // Configuring the OAuth2 client with client ID, client secret, and redirect URL[m
             const redirectUrl = 'http://127.0.0.1:4000/oauth';[m
             const oAuth2Client = new OAuth2Client(process.env.CLIENT_ID, process.env.CLIENT_SECRET, redirectUrl);[m
[32m+[m[32m            // Set the scope to include email[m
[32m+[m[32m            const scopes = ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile'];[m
[32m+[m[32m            // Generate the URL for Google OAuth2 consent screen[m
[32m+[m[32m            const authUrl = oAuth2Client.generateAuthUrl({[m
[32m+[m[32m                access_type: 'offline',[m
[32m+[m[32m                scope: scopes,[m
[32m+[m[32m            });[m
             // Obtaining tokens using the authorization code[m
             const tokenResponse = yield oAuth2Client.getToken(code);[m
[32m+[m[32m            // Extracting id token from the tokenResponse[m
[32m+[m[32m            const idToken = tokenResponse.tokens.id_token;[m
             // Setting the obtained tokens as credentials for the OAuth2 client[m
             yield oAuth2Client.setCredentials(tokenResponse.tokens);[m
             console.log('Tokens acquired');[m
             // Accessing user credentials from the OAuth2 client[m
             const user = oAuth2Client.credentials;[m
             console.log('credentials', user);[m
[32m+[m[32m            const ticket = yield oAuth2Client.verifyIdToken({ idToken: user.id_token, audience: process.env.CLIENT_ID, });[m
[32m+[m[32m            console.log('ticket', ticket);[m
[32m+[m[32m            // Access the payload of the ticket[m
[32m+[m[32m            const payload = ticket.getPayload();[m
[32m+[m[32m            // Extract the email from the payload[m
[32m+[m[32m            const email = payload['email'];[m
[32m+[m[32m            console.log('User email:', email);[m
             // Fetching user data using the obtained access token[m
             const googleUserData = yield getUsersData(user.access_token);[m
             console.log("Google user data is: ", googleUserData);[m
[32m+[m[32m            console.log('ticket', ticket);[m
[32m+[m[32m            console.log('email', email);[m
             appUserData = {[m
                 // id: 0,[m
                 firstName: googleUserData.given_name,[m
                 lastName: googleUserData.family_name,[m
[31m-                username: `${googleUserData.given_name}${googleUserData.family_name}`,[m
[31m-                password: '123',[m
[31m-                email: `${googleUserData.given_name}${googleUserData.family_name}@gmail.com`,[m
[32m+[m[32m                username: '',[m
[32m+[m[32m                password: '',[m
[32m+[m[32m                email: email,[m
                 birthDate: new Date('2000-01-01'), // Set birthDate to January 1, 2000[m
[31m-                gender: '---',[m
[31m-                address: '---',[m
[31m-                phoneNumber: '---',[m
[32m+[m[32m                gender: '',[m
[32m+[m[32m                address: '',[m
[32m+[m[32m                phoneNumber: '',[m
                 registrationDate: new Date(), // Set registrationDate to the current date[m
                 accountStatus: true,[m
                 role: 'user',[m
[36m@@ -122,14 +138,11 @@[m [mrouter.get('/', function (req, res, next) {[m
             // req.body.userData = appUserData;[m
         }[m
         catch (error) {[m
[31m-            // Handling errors that may occur during the OAuth process[m
             console.log('Error with signing in with Google.', error);[m
         }[m
         finally {[m
[31m-            // Send user data and receive username/password if successful[m
             const createdUser = yield sendUserData(appUserData);[m
             if (createdUser) {[m
[31m-                // Redirect to the login page on the frontend[m
                 window.alert('User registered successfully! Please log in.');[m
                 res.redirect(`http://127.0.0.1:3000/login}`);[m
             }[m
[1mdiff --git a/dist/routes/requestRoute.js b/dist/routes/requestRoute.js[m
[1mindex 392893d..aebdc2a 100644[m
[1m--- a/dist/routes/requestRoute.js[m
[1m+++ b/dist/routes/requestRoute.js[m
[36m@@ -17,7 +17,6 @@[m [mconst requestsRoute = express_1.default.Router();[m
 const dotenv_1 = __importDefault(require("dotenv"));[m
 dotenv_1.default.config();[m
 const google_auth_library_1 = require("google-auth-library");[m
[31m-// Handle POST requests to the specified route[m
 requestsRoute.post('/', (req, res, next) => __awaiter(void 0, void 0, void 0, function* () {[m
     // Set CORS headers to allow requests from http://localhost:3000[m
     res.header('Access-Control-Allow-Origin', 'http://localhost:3000');[m
[36m@@ -30,7 +29,8 @@[m [mrequestsRoute.post('/', (req, res, next) => __awaiter(void 0, void 0, void 0, fu[m
     // Use oAuth2Client to generate the URL that will be used to initiate the Google authentication[m
     const authorizeUrl = oAuth2Client.generateAuthUrl({[m
         access_type: 'offline',[m
[31m-        scope: 'https://www.googleapis.com/auth/userinfo.profile openid',[m
[32m+[m[32m        // scope: 'https://www.googleapis.com/auth/userinfo.profile openid',[m
[32m+[m[32m        scope: 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email',[m
         prompt: 'consent'[m
     });[m
     // Send the generated authentication URL as JSON response[m
[1mdiff --git a/dist/routes/usersRoute.js b/dist/routes/usersRoute.js[m
[1mindex 132f77f..0b16a38 100644[m
[1m--- a/dist/routes/usersRoute.js[m
[1m+++ b/dist/routes/usersRoute.js[m
[36m@@ -18,6 +18,7 @@[m [mconst UserBL_1 = require("../BL/UserBL");[m
 const UserRepository_1 = require("../dal/UserRepository");[m
 const usersRoute = express_1.default.Router();[m
 const userController = new UserController_1.UserController(new UserBL_1.UserBL(new UserRepository_1.UserRepository()));[m
[32m+[m[32musersRoute.get('/valid', (req, res) => __awaiter(void 0, void 0, void 0, function* () { return yield userController.checkUserIsValid(req, res); }));[m
 usersRoute.post('/', (req, res) => __awaiter(void 0, void 0, void 0, function* () { return yield userController.addUser(req, res); }));[m
 usersRoute.get('/:id', (req, res) => __awaiter(void 0, void 0, void 0, function* () { return yield userController.getUser(req, res); }));[m
 usersRoute.get('/', (req, res) => __awaiter(void 0, void 0, void 0, function* () { return yield userController.getUsers(req, res); }));[m
[1mdiff --git a/dist/tests/e2e.test.js b/dist/tests/e2e.test.js[m
[1mindex 9a8684c..65c71f2 100644[m
[1m--- a/dist/tests/e2e.test.js[m
[1m+++ b/dist/tests/e2e.test.js[m
[36m@@ -17,6 +17,7 @@[m [mconst Index_1 = require("../Index");[m
 describe('API Endpoints', () => {[m
     let postId;[m
     let userId;[m
[32m+[m[32m    // post tests[m
     it('GET /posts should return all posts', () => __awaiter(void 0, void 0, void 0, function* () {[m
         const response = yield (0, supertest_1.default)(Index_1.app).get('/posts');[m
         expect(response.status).toBe(200);[m
[36m@@ -63,6 +64,7 @@[m [mdescribe('API Endpoints', () => {[m
         expect(response.status).toBe(200);[m
         expect(response.body).toHaveProperty('id', postId);[m
     }));[m
[32m+[m[32m    // user tests[m
     it('GET /users should return all users', () => __awaiter(void 0, void 0, void 0, function* () {[m
         const response = yield (0, supertest_1.default)(Index_1.app).get('/users');[m
         expect(response.status).toBe(200);[m
[1mdiff --git a/node_modules/.package-lock.json b/node_modules/.package-lock.json[m
[1mindex 604230b..2f7fe9d 100644[m
[1m--- a/node_modules/.package-lock.json[m
[1m+++ b/node_modules/.package-lock.json[m
[36m@@ -2821,9 +2821,9 @@[m
       }[m
     },[m
     "node_modules/google-auth-library": {[m
[31m-      "version": "9.5.0",[m
[31m-      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.5.0.tgz",[m
[31m-      "integrity": "sha512-OUbP509lWVlZxuMY+Cgomw49VzZFP9myIcVeYEpeBlbXJbPC4R+K4BmO9hd3ciYM5QIwm5W1PODcKjqxtkye9Q==",[m
[32m+[m[32m      "version": "9.6.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.6.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-4CacM29MLC2eT9Cey5GDVK4Q8t+MMp8+OEdOaqD9MG6b0dOyLORaaeJMPQ7EESVgm/+z5EKYyFLxgzBJlJgyHQ==",[m
       "dependencies": {[m
         "base64-js": "^1.3.0",[m
         "ecdsa-sig-formatter": "^1.0.11",[m
[36m@@ -3912,6 +3912,51 @@[m
         "node": ">=6"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/jsonwebtoken": {[m
[32m+[m[32m      "version": "9.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "jws": "^3.2.2",[m
[32m+[m[32m        "lodash.includes": "^4.3.0",[m
[32m+[m[32m        "lodash.isboolean": "^3.0.3",[m
[32m+[m[32m        "lodash.isinteger": "^4.0.4",[m
[32m+[m[32m        "lodash.isnumber": "^3.0.3",[m
[32m+[m[32m        "lodash.isplainobject": "^4.0.6",[m
[32m+[m[32m        "lodash.isstring": "^4.0.1",[m
[32m+[m[32m        "lodash.once": "^4.0.0",[m
[32m+[m[32m        "ms": "^2.1.1",[m
[32m+[m[32m        "semver": "^7.5.4"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=12",[m
[32m+[m[32m        "npm": ">=6"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/jwa": {[m
[32m+[m[32m      "version": "1.4.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "buffer-equal-constant-time": "1.0.1",[m
[32m+[m[32m        "ecdsa-sig-formatter": "1.0.11",[m
[32m+[m[32m        "safe-buffer": "^5.0.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/jws": {[m
[32m+[m[32m      "version": "3.2.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "jwa": "^1.4.1",[m
[32m+[m[32m        "safe-buffer": "^5.0.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/ms": {[m
[32m+[m[32m      "version": "2.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="[m
[32m+[m[32m    },[m
     "node_modules/jstransformer": {[m
       "version": "1.0.0",[m
       "resolved": "https://registry.npmjs.org/jstransformer/-/jstransformer-1.0.0.tgz",[m
[36m@@ -4000,12 +4045,47 @@[m
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",[m
       "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="[m
     },[m
[32m+[m[32m    "node_modules/lodash.includes": {[m
[32m+[m[32m      "version": "4.3.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isboolean": {[m
[32m+[m[32m      "version": "3.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isinteger": {[m
[32m+[m[32m      "version": "4.0.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isnumber": {[m
[32m+[m[32m      "version": "3.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isplainobject": {[m
[32m+[m[32m      "version": "4.0.6",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",[m
[32m+[m[32m      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isstring": {[m
[32m+[m[32m      "version": "4.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="[m
[32m+[m[32m    },[m
     "node_modules/lodash.memoize": {[m
       "version": "4.1.2",[m
       "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",[m
       "integrity": "sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==",[m
       "dev": true[m
     },[m
[32m+[m[32m    "node_modules/lodash.once": {[m
[32m+[m[32m      "version": "4.1.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg=="[m
[32m+[m[32m    },[m
     "node_modules/longest": {[m
       "version": "1.0.1",[m
       "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",[m
[36m@@ -4018,7 +4098,6 @@[m
       "version": "6.0.0",[m
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",[m
       "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",[m
[31m-      "dev": true,[m
       "dependencies": {[m
         "yallist": "^4.0.0"[m
       },[m
[36m@@ -4978,7 +5057,6 @@[m
       "version": "7.6.0",[m
       "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.0.tgz",[m
       "integrity": "sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==",[m
[31m-      "dev": true,[m
       "dependencies": {[m
         "lru-cache": "^6.0.0"[m
       },[m
[36m@@ -5736,8 +5814,7 @@[m
     "node_modules/yallist": {[m
       "version": "4.0.0",[m
       "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",[m
[31m-      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",[m
[31m-      "dev": true[m
[32m+[m[32m      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="[m
     },[m
     "node_modules/yargs": {[m
       "version": "3.10.0",[m
[1mdiff --git a/node_modules/google-auth-library/CHANGELOG.md b/node_modules/google-auth-library/CHANGELOG.md[m
[1mindex d2f675e..a9cf0b0 100644[m
[1m--- a/node_modules/google-auth-library/CHANGELOG.md[m
[1m+++ b/node_modules/google-auth-library/CHANGELOG.md[m
[36m@@ -4,6 +4,40 @@[m
 [m
 [1]: https://www.npmjs.com/package/google-auth-library?activeTab=versions[m
 [m
[32m+[m[32m## [9.6.3](https://github.com/googleapis/google-auth-library-nodejs/compare/v9.6.2...v9.6.3) (2024-02-06)[m
[32m+[m
[32m+[m
[32m+[m[32m### Bug Fixes[m
[32m+[m
[32m+[m[32m* Always sign with `scopes` on Non-Default Universes ([#1752](https://github.com/googleapis/google-auth-library-nodejs/issues/1752)) ([f3d3a03](https://github.com/googleapis/google-auth-library-nodejs/commit/f3d3a03dbce42a400c11457131dd1fabc206826a))[m
[32m+[m
[32m+[m[32m## [9.6.2](https://github.com/googleapis/google-auth-library-nodejs/compare/v9.6.1...v9.6.2) (2024-02-02)[m
[32m+[m
[32m+[m
[32m+[m[32m### Bug Fixes[m
[32m+[m
[32m+[m[32m* Allow Get Universe Without Credentials ([#1748](https://github.com/googleapis/google-auth-library-nodejs/issues/1748)) ([696db72](https://github.com/googleapis/google-auth-library-nodejs/commit/696db72bb8644739768d20375d670813d4490714))[m
[32m+[m
[32m+[m[32m## [9.6.1](https://github.com/googleapis/google-auth-library-nodejs/compare/v9.6.0...v9.6.1) (2024-02-01)[m
[32m+[m
[32m+[m
[32m+[m[32m### Bug Fixes[m
[32m+[m
[32m+[m[32m* Universe Domain Resolution ([#1745](https://github.com/googleapis/google-auth-library-nodejs/issues/1745)) ([a4f9f9c](https://github.com/googleapis/google-auth-library-nodejs/commit/a4f9f9c65853a37e6e83861c5d22533dba774037))[m
[32m+[m
[32m+[m[32m## [9.6.0](https://github.com/googleapis/google-auth-library-nodejs/compare/v9.5.0...v9.6.0) (2024-01-29)[m
[32m+[m
[32m+[m
[32m+[m[32m### Features[m
[32m+[m
[32m+[m[32m* Open More Endpoints for Customization ([#1721](https://github.com/googleapis/google-auth-library-nodejs/issues/1721)) ([effbf87](https://github.com/googleapis/google-auth-library-nodejs/commit/effbf87f6f0fd11a0cb1c749dad81737926dc436))[m
[32m+[m[32m* Use self-signed JWTs when non-default Universe Domains ([#1722](https://github.com/googleapis/google-auth-library-nodejs/issues/1722)) ([7e9876e](https://github.com/googleapis/google-auth-library-nodejs/commit/7e9876e2496b073220ca270368da7e9522da88f9))[m
[32m+[m
[32m+[m
[32m+[m[32m### Bug Fixes[m
[32m+[m
[32m+[m[32m* Revert Missing `WORKFORCE_AUDIENCE_PATTERN` ([#1740](https://github.com/googleapis/google-auth-library-nodejs/issues/1740)) ([422de68](https://github.com/googleapis/google-auth-library-nodejs/commit/422de68d8d9ea66e6bf1fea923f61c8af0842420))[m
[32m+[m
 ## [9.5.0](https://github.com/googleapis/google-auth-library-nodejs/compare/v9.4.2...v9.5.0) (2024-01-25)[m
 [m
 [m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/baseexternalclient.d.ts b/node_modules/google-auth-library/build/src/auth/baseexternalclient.d.ts[m
[1mindex cac578a..0d34f58 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/baseexternalclient.d.ts[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/baseexternalclient.d.ts[m
[36m@@ -16,7 +16,11 @@[m [mexport declare const EXPIRATION_TIME_OFFSET: number;[m
  * 3. external_Account => non-GCP service (eg. AWS, Azure, K8s)[m
  */[m
 export declare const EXTERNAL_ACCOUNT_TYPE = "external_account";[m
[31m-/** Cloud resource manager URL used to retrieve project information. */[m
[32m+[m[32m/**[m
[32m+[m[32m * Cloud resource manager URL used to retrieve project information.[m
[32m+[m[32m *[m
[32m+[m[32m * @deprecated use {@link BaseExternalAccountClient.cloudResourceManagerURL} instead[m
[32m+[m[32m **/[m
 export declare const CLOUD_RESOURCE_MANAGER = "https://cloudresourcemanager.googleapis.com/v1/projects/";[m
 /**[m
  * For backwards compatibility.[m
[36m@@ -40,6 +44,12 @@[m [mexport interface BaseExternalAccountClientOptions extends SharedExternalAccountC[m
     client_id?: string;[m
     client_secret?: string;[m
     workforce_pool_user_project?: string;[m
[32m+[m[32m    scopes?: string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * https://cloudresourcemanager.googleapis.com/v1/projects/[m
[32m+[m[32m     **/[m
[32m+[m[32m    cloud_resource_manager_url?: string | URL;[m
 }[m
 /**[m
  * Interface defining the successful response for iamcredentials[m
[36m@@ -98,6 +108,13 @@[m [mexport declare abstract class BaseExternalAccountClient extends AuthClient {[m
     projectNumber: string | null;[m
     private readonly configLifetimeRequested;[m
     protected credentialSourceType?: string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * ```ts[m
[32m+[m[32m     * new URL('https://cloudresourcemanager.googleapis.com/v1/projects/');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     */[m
[32m+[m[32m    protected cloudResourceManagerURL: URL | string;[m
     /**[m
      * Instantiate a BaseExternalAccountClient instance using the provided JSON[m
      * object loaded from an external account credentials file.[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/baseexternalclient.js b/node_modules/google-auth-library/build/src/auth/baseexternalclient.js[m
[1mindex f274590..df8e8a1 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/baseexternalclient.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/baseexternalclient.js[m
[36m@@ -42,7 +42,11 @@[m [mexports.EXPIRATION_TIME_OFFSET = 5 * 60 * 1000;[m
  * 3. external_Account => non-GCP service (eg. AWS, Azure, K8s)[m
  */[m
 exports.EXTERNAL_ACCOUNT_TYPE = 'external_account';[m
[31m-/** Cloud resource manager URL used to retrieve project information. */[m
[32m+[m[32m/**[m
[32m+[m[32m * Cloud resource manager URL used to retrieve project information.[m
[32m+[m[32m *[m
[32m+[m[32m * @deprecated use {@link BaseExternalAccountClient.cloudResourceManagerURL} instead[m
[32m+[m[32m **/[m
 exports.CLOUD_RESOURCE_MANAGER = 'https://cloudresourcemanager.googleapis.com/v1/projects/';[m
 /** The workforce audience pattern. */[m
 const WORKFORCE_AUDIENCE_PATTERN = '//iam\\.googleapis\\.com/locations/[^/]+/workforcePools/[^/]+/providers/.+';[m
[36m@@ -89,6 +93,8 @@[m [mclass BaseExternalAccountClient extends authclient_1.AuthClient {[m
         const serviceAccountImpersonationUrl = opts.get('service_account_impersonation_url');[m
         const serviceAccountImpersonation = opts.get('service_account_impersonation');[m
         const serviceAccountImpersonationLifetime = (0, util_1.originalOrCamelOptions)(serviceAccountImpersonation).get('token_lifetime_seconds');[m
[32m+[m[32m        this.cloudResourceManagerURL = new URL(opts.get('cloud_resource_manager_url') ||[m
[32m+[m[32m            `https://cloudresourcemanager.${this.universeDomain}/v1/projects/`);[m
         if (clientId) {[m
             this.clientAuth = {[m
                 confidentialClientType: 'basic',[m
[36m@@ -97,8 +103,7 @@[m [mclass BaseExternalAccountClient extends authclient_1.AuthClient {[m
             };[m
         }[m
         this.stsCredential = new sts.StsCredentials(tokenUrl, this.clientAuth);[m
[31m-        // Default OAuth scope. This could be overridden via public property.[m
[31m-        this.scopes = [DEFAULT_OAUTH_SCOPE];[m
[32m+[m[32m        this.scopes = opts.get('scopes') || [DEFAULT_OAUTH_SCOPE];[m
         this.cachedAccessToken = null;[m
         this.audience = opts.get('audience');[m
         this.subjectTokenType = subjectTokenType;[m
[36m@@ -216,7 +221,7 @@[m [mclass BaseExternalAccountClient extends authclient_1.AuthClient {[m
             const headers = await this.getRequestHeaders();[m
             const response = await this.transporter.request({[m
                 headers,[m
[31m-                url: `${exports.CLOUD_RESOURCE_MANAGER}${projectNumber}`,[m
[32m+[m[32m                url: `${this.cloudResourceManagerURL.toString()}${projectNumber}`,[m
                 responseType: 'json',[m
             });[m
             this.projectId = response.data.projectId;[m
[36m@@ -411,12 +416,7 @@[m [mclass BaseExternalAccountClient extends authclient_1.AuthClient {[m
         if (typeof this.scopes === 'string') {[m
             return [this.scopes];[m
         }[m
[31m-        else if (typeof this.scopes === 'undefined') {[m
[31m-            return [DEFAULT_OAUTH_SCOPE];[m
[31m-        }[m
[31m-        else {[m
[31m-            return this.scopes;[m
[31m-        }[m
[32m+[m[32m        return this.scopes || [DEFAULT_OAUTH_SCOPE];[m
     }[m
     getMetricsHeaderValue() {[m
         const nodeVersion = process.version.replace(/^v/, '');[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/downscopedclient.js b/node_modules/google-auth-library/build/src/auth/downscopedclient.js[m
[1mindex bede1f9..9c3b626 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/downscopedclient.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/downscopedclient.js[m
[36m@@ -29,8 +29,6 @@[m [mconst STS_REQUEST_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:access_token';[m
  * The requested token exchange subject_token_type: rfc8693#section-2.1[m
  */[m
 const STS_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:access_token';[m
[31m-/** The STS access token exchange end point. */[m
[31m-const STS_ACCESS_TOKEN_URL = 'https://sts.googleapis.com/v1/token';[m
 /**[m
  * The maximum number of access boundary rules a Credential Access Boundary[m
  * can contain.[m
[36m@@ -93,7 +91,7 @@[m [mclass DownscopedClient extends authclient_1.AuthClient {[m
                 throw new Error('At least one permission should be defined in access boundary rules.');[m
             }[m
         }[m
[31m-        this.stsCredential = new sts.StsCredentials(STS_ACCESS_TOKEN_URL);[m
[32m+[m[32m        this.stsCredential = new sts.StsCredentials(`https://sts.${this.universeDomain}/v1/token`);[m
         this.cachedDownscopedAccessToken = null;[m
     }[m
     /**[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/googleauth.d.ts b/node_modules/google-auth-library/build/src/auth/googleauth.d.ts[m
[1mindex 6555ab0..19875c7 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/googleauth.d.ts[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/googleauth.d.ts[m
[36m@@ -72,7 +72,6 @@[m [mexport interface GoogleAuthOptions<T extends AuthClient = JSONClient> {[m
 }[m
 export declare const CLOUD_SDK_CLIENT_ID = "764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com";[m
 export declare class GoogleAuth<T extends AuthClient = JSONClient> {[m
[31m-    #private;[m
     transporter?: Transporter;[m
     /**[m
      * Caches a value indicating whether the auth layer is running on Google[m
[36m@@ -135,11 +134,19 @@[m [mexport declare class GoogleAuth<T extends AuthClient = JSONClient> {[m
     private getProjectIdOptional;[m
     private findAndCacheProjectId;[m
     private getProjectIdAsync;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves a universe domain from the metadata server via[m
[32m+[m[32m     * {@link gcpMetadata.universe}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @returns a universe domain[m
[32m+[m[32m     */[m
[32m+[m[32m    getUniverseDomainFromMetadataServer(): Promise<string>;[m
     /**[m
      * Retrieves, caches, and returns the universe domain in the following order[m
      * of precedence:[m
      * - The universe domain in {@link GoogleAuth.clientOptions}[m
[31m-     * - {@link gcpMetadata.universe}[m
[32m+[m[32m     * - An existing or ADC {@link AuthClient}'s universe domain[m
[32m+[m[32m     * - {@link gcpMetadata.universe}, if {@link Compute} client[m
      *[m
      * @returns The universe domain[m
      */[m
[36m@@ -319,8 +326,14 @@[m [mexport declare class GoogleAuth<T extends AuthClient = JSONClient> {[m
      * Sign the given data with the current private key, or go out[m
      * to the IAM API to sign it.[m
      * @param data The data to be signed.[m
[32m+[m[32m     * @param endpoint A custom endpoint to use.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * sign('data', 'https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/');[m
[32m+[m[32m     * ```[m
      */[m
[31m-    sign(data: string): Promise<string>;[m
[32m+[m[32m    sign(data: string, endpoint?: string): Promise<string>;[m
     private signBlob;[m
 }[m
 export interface SignBlobResponse {[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/googleauth.js b/node_modules/google-auth-library/build/src/auth/googleauth.js[m
[1mindex ffae9a9..29df9f3 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/googleauth.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/googleauth.js[m
[36m@@ -12,18 +12,6 @@[m
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
 // See the License for the specific language governing permissions and[m
 // limitations under the License.[m
[31m-var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {[m
[31m-    if (kind === "m") throw new TypeError("Private method is not writable");[m
[31m-    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");[m
[31m-    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");[m
[31m-    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;[m
[31m-};[m
[31m-var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {[m
[31m-    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");[m
[31m-    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");[m
[31m-    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);[m
[31m-};[m
[31m-var _GoogleAuth_instances, _GoogleAuth_universeDomain, _GoogleAuth_getUniverseFromMetadataServer;[m
 Object.defineProperty(exports, "__esModule", { value: true });[m
 exports.GoogleAuth = exports.CLOUD_SDK_CLIENT_ID = void 0;[m
 const child_process_1 = require("child_process");[m
[36m@@ -74,7 +62,6 @@[m [mclass GoogleAuth {[m
      * @param opts[m
      */[m
     constructor(opts) {[m
[31m-        _GoogleAuth_instances.add(this);[m
         /**[m
          * Caches a value indicating whether the auth layer is running on Google[m
          * Compute Engine.[m
[36m@@ -85,12 +72,6 @@[m [mclass GoogleAuth {[m
         this.jsonContent = null;[m
         this.cachedCredential = null;[m
         this.clientOptions = {};[m
[31m-        /**[m
[31m-         * The cached universe domain.[m
[31m-         *[m
[31m-         * @see {@link GoogleAuth.getUniverseDomain}[m
[31m-         */[m
[31m-        _GoogleAuth_universeDomain.set(this, undefined);[m
         opts = opts || {};[m
         this._cachedProjectId = opts.projectId || null;[m
         this.cachedCredential = opts.authClient || null;[m
[36m@@ -100,7 +81,6 @@[m [mclass GoogleAuth {[m
         this.clientOptions = opts.clientOptions || {};[m
         if (opts.universeDomain) {[m
             this.clientOptions.universeDomain = opts.universeDomain;[m
[31m-            __classPrivateFieldSet(this, _GoogleAuth_universeDomain, opts.universeDomain, "f");[m
         }[m
     }[m
     // GAPIC client libraries should always use self-signed JWTs. The following[m
[36m@@ -176,19 +156,48 @@[m [mclass GoogleAuth {[m
         }[m
         return this._findProjectIdPromise;[m
     }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves a universe domain from the metadata server via[m
[32m+[m[32m     * {@link gcpMetadata.universe}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @returns a universe domain[m
[32m+[m[32m     */[m
[32m+[m[32m    async getUniverseDomainFromMetadataServer() {[m
[32m+[m[32m        var _a;[m
[32m+[m[32m        let universeDomain;[m
[32m+[m[32m        try {[m
[32m+[m[32m            universeDomain = await gcpMetadata.universe('universe_domain');[m
[32m+[m[32m            universeDomain || (universeDomain = authclient_1.DEFAULT_UNIVERSE);[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (e) {[m
[32m+[m[32m            if (e && ((_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.status) === 404) {[m
[32m+[m[32m                universeDomain = authclient_1.DEFAULT_UNIVERSE;[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                throw e;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return universeDomain;[m
[32m+[m[32m    }[m
     /**[m
      * Retrieves, caches, and returns the universe domain in the following order[m
      * of precedence:[m
      * - The universe domain in {@link GoogleAuth.clientOptions}[m
[31m-     * - {@link gcpMetadata.universe}[m
[32m+[m[32m     * - An existing or ADC {@link AuthClient}'s universe domain[m
[32m+[m[32m     * - {@link gcpMetadata.universe}, if {@link Compute} client[m
      *[m
      * @returns The universe domain[m
      */[m
     async getUniverseDomain() {[m
[31m-        var _a, _b;[m
[31m-        __classPrivateFieldSet(this, _GoogleAuth_universeDomain, (_a = __classPrivateFieldGet(this, _GoogleAuth_universeDomain, "f")) !== null && _a !== void 0 ? _a : (0, util_1.originalOrCamelOptions)(this.clientOptions).get('universe_domain'), "f");[m
[31m-        __classPrivateFieldSet(this, _GoogleAuth_universeDomain, (_b = __classPrivateFieldGet(this, _GoogleAuth_universeDomain, "f")) !== null && _b !== void 0 ? _b : await __classPrivateFieldGet(this, _GoogleAuth_instances, "m", _GoogleAuth_getUniverseFromMetadataServer).call(this), "f");[m
[31m-        return __classPrivateFieldGet(this, _GoogleAuth_universeDomain, "f") || authclient_1.DEFAULT_UNIVERSE;[m
[32m+[m[32m        let universeDomain = (0, util_1.originalOrCamelOptions)(this.clientOptions).get('universe_domain');[m
[32m+[m[32m        try {[m
[32m+[m[32m            universeDomain !== null && universeDomain !== void 0 ? universeDomain : (universeDomain = (await this.getClient()).universeDomain);[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (_a) {[m
[32m+[m[32m            // client or ADC is not available[m
[32m+[m[32m            universeDomain !== null && universeDomain !== void 0 ? universeDomain : (universeDomain = authclient_1.DEFAULT_UNIVERSE);[m
[32m+[m[32m        }[m
[32m+[m[32m        return universeDomain;[m
     }[m
     /**[m
      * @returns Any scopes (user-specified or default scopes specified by the[m
[36m@@ -253,7 +262,8 @@[m [mclass GoogleAuth {[m
         if (await this._checkIsGCE()) {[m
             // set universe domain for Compute client[m
             if (!(0, util_1.originalOrCamelOptions)(options).get('universe_domain')) {[m
[31m-                options.universeDomain = await this.getUniverseDomain();[m
[32m+[m[32m                options.universeDomain =[m
[32m+[m[32m                    await this.getUniverseDomainFromMetadataServer();[m
             }[m
             options.scopes = this.getAnyScopes();[m
             return await this.prepareAndCacheADC(new computeclient_1.Compute(options), quotaProjectIdOverride);[m
[36m@@ -389,7 +399,8 @@[m [mclass GoogleAuth {[m
             throw new Error('The incoming JSON object does not contain a service_account_impersonation_url field');[m
         }[m
         // Create source client for impersonation[m
[31m-        const sourceClient = new refreshclient_1.UserRefreshClient(json.source_credentials.client_id, json.source_credentials.client_secret, json.source_credentials.refresh_token);[m
[32m+[m[32m        const sourceClient = new refreshclient_1.UserRefreshClient();[m
[32m+[m[32m        sourceClient.fromJSON(json.source_credentials);[m
         if (((_a = json.service_account_impersonation_url) === null || _a === void 0 ? void 0 : _a.length) > 256) {[m
             /**[m
              * Prevents DOS attacks.[m
[36m@@ -404,6 +415,7 @@[m [mclass GoogleAuth {[m
         }[m
         const targetScopes = (_d = this.getAnyScopes()) !== null && _d !== void 0 ? _d : [];[m
         const client = new impersonated_1.Impersonated({[m
[32m+[m[32m            ...json,[m
             delegates: (_e = json.delegates) !== null && _e !== void 0 ? _e : [],[m
             sourceClient: sourceClient,[m
             targetPrincipal: targetPrincipal,[m
[36m@@ -419,6 +431,8 @@[m [mclass GoogleAuth {[m
      */[m
     fromJSON(json, options = {}) {[m
         let client;[m
[32m+[m[32m        // user's preferred universe domain[m
[32m+[m[32m        const preferredUniverseDomain = (0, util_1.originalOrCamelOptions)(options).get('universe_domain');[m
         if (json.type === refreshclient_1.USER_REFRESH_ACCOUNT_TYPE) {[m
             client = new refreshclient_1.UserRefreshClient(options);[m
             client.fromJSON(json);[m
[36m@@ -439,6 +453,9 @@[m [mclass GoogleAuth {[m
             this.setGapicJWTValues(client);[m
             client.fromJSON(json);[m
         }[m
[32m+[m[32m        if (preferredUniverseDomain) {[m
[32m+[m[32m            client.universeDomain = preferredUniverseDomain;[m
[32m+[m[32m        }[m
         return client;[m
     }[m
     /**[m
[36m@@ -741,9 +758,19 @@[m [mclass GoogleAuth {[m
      * Sign the given data with the current private key, or go out[m
      * to the IAM API to sign it.[m
      * @param data The data to be signed.[m
[32m+[m[32m     * @param endpoint A custom endpoint to use.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * sign('data', 'https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/');[m
[32m+[m[32m     * ```[m
      */[m
[31m-    async sign(data) {[m
[32m+[m[32m    async sign(data, endpoint) {[m
         const client = await this.getClient();[m
[32m+[m[32m        const universe = await this.getUniverseDomain();[m
[32m+[m[32m        endpoint =[m
[32m+[m[32m            endpoint ||[m
[32m+[m[32m                `https://iamcredentials.${universe}/v1/projects/-/serviceAccounts/`;[m
         if (client instanceof impersonated_1.Impersonated) {[m
             const signed = await client.sign(data);[m
             return signed.signedBlob;[m
[36m@@ -757,14 +784,13 @@[m [mclass GoogleAuth {[m
         if (!creds.client_email) {[m
             throw new Error('Cannot sign data without `client_email`.');[m
         }[m
[31m-        return this.signBlob(crypto, creds.client_email, data);[m
[32m+[m[32m        return this.signBlob(crypto, creds.client_email, data, endpoint);[m
     }[m
[31m-    async signBlob(crypto, emailOrUniqueId, data) {[m
[31m-        const url = 'https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/' +[m
[31m-            `${emailOrUniqueId}:signBlob`;[m
[32m+[m[32m    async signBlob(crypto, emailOrUniqueId, data, endpoint) {[m
[32m+[m[32m        const url = new URL(endpoint + `${emailOrUniqueId}:signBlob`);[m
         const res = await this.request({[m
             method: 'POST',[m
[31m-            url,[m
[32m+[m[32m            url: url.href,[m
             data: {[m
                 payload: crypto.encodeBase64StringUtf8(data),[m
             },[m
[36m@@ -773,25 +799,6 @@[m [mclass GoogleAuth {[m
     }[m
 }[m
 exports.GoogleAuth = GoogleAuth;[m
[31m-_GoogleAuth_universeDomain = new WeakMap(), _GoogleAuth_instances = new WeakSet(), _GoogleAuth_getUniverseFromMetadataServer = async function _GoogleAuth_getUniverseFromMetadataServer() {[m
[31m-    var _a;[m
[31m-    if (!(await this._checkIsGCE()))[m
[31m-        return;[m
[31m-    let universeDomain;[m
[31m-    try {[m
[31m-        universeDomain = await gcpMetadata.universe('universe_domain');[m
[31m-        universeDomain || (universeDomain = authclient_1.DEFAULT_UNIVERSE);[m
[31m-    }[m
[31m-    catch (e) {[m
[31m-        if (e && ((_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.status) === 404) {[m
[31m-            universeDomain = authclient_1.DEFAULT_UNIVERSE;[m
[31m-        }[m
[31m-        else {[m
[31m-            throw e;[m
[31m-        }[m
[31m-    }[m
[31m-    return universeDomain;[m
[31m-};[m
 /**[m
  * Export DefaultTransporter as a static property of the class.[m
  */[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/jwtclient.js b/node_modules/google-auth-library/build/src/auth/jwtclient.js[m
[1mindex 980359f..c4a41f2 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/jwtclient.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/jwtclient.js[m
[36m@@ -17,6 +17,7 @@[m [mexports.JWT = void 0;[m
 const gtoken_1 = require("gtoken");[m
 const jwtaccess_1 = require("./jwtaccess");[m
 const oauth2client_1 = require("./oauth2client");[m
[32m+[m[32mconst authclient_1 = require("./authclient");[m
 class JWT extends oauth2client_1.OAuth2Client {[m
     constructor(optionsOrEmail, keyFile, key, scopes, subject, keyId) {[m
         const opts = optionsOrEmail && typeof optionsOrEmail === 'object'[m
[36m@@ -52,7 +53,11 @@[m [mclass JWT extends oauth2client_1.OAuth2Client {[m
     async getRequestMetadataAsync(url) {[m
         url = this.defaultServicePath ? `https://${this.defaultServicePath}/` : url;[m
         const useSelfSignedJWT = (!this.hasUserScopes() && url) ||[m
[31m-            (this.useJWTAccessWithScope && this.hasAnyScopes());[m
[32m+[m[32m            (this.useJWTAccessWithScope && this.hasAnyScopes()) ||[m
[32m+[m[32m            this.universeDomain !== authclient_1.DEFAULT_UNIVERSE;[m
[32m+[m[32m        if (this.subject && this.universeDomain !== authclient_1.DEFAULT_UNIVERSE) {[m
[32m+[m[32m            throw new RangeError(`Service Account user is configured for the credential. Domain-wide delegation is not supported in universes other than ${authclient_1.DEFAULT_UNIVERSE}`);[m
[32m+[m[32m        }[m
         if (!this.apiKey && useSelfSignedJWT) {[m
             if (this.additionalClaims &&[m
                 this.additionalClaims.target_audience) {[m
[36m@@ -76,10 +81,13 @@[m [mclass JWT extends oauth2client_1.OAuth2Client {[m
                 else if (!url) {[m
                     scopes = this.defaultScopes;[m
                 }[m
[32m+[m[32m                const useScopes = this.useJWTAccessWithScope ||[m
[32m+[m[32m                    this.universeDomain !== authclient_1.DEFAULT_UNIVERSE;[m
                 const headers = await this.access.getRequestHeaders(url !== null && url !== void 0 ? url : undefined, this.additionalClaims, [m
                 // Scopes take precedent over audience for signing,[m
[31m-                // so we only provide them if useJWTAccessWithScope is on[m
[31m-                this.useJWTAccessWithScope ? scopes : undefined);[m
[32m+[m[32m                // so we only provide them if `useJWTAccessWithScope` is on or[m
[32m+[m[32m                // if we are in a non-default universe[m
[32m+[m[32m                useScopes ? scopes : undefined);[m
                 return { headers: this.addSharedMetadataHeaders(headers) };[m
             }[m
         }[m
[36m@@ -211,6 +219,7 @@[m [mclass JWT extends oauth2client_1.OAuth2Client {[m
         this.keyId = json.private_key_id;[m
         this.projectId = json.project_id;[m
         this.quotaProjectId = json.quota_project_id;[m
[32m+[m[32m        this.universeDomain = json.universe_domain || this.universeDomain;[m
     }[m
     fromStream(inputStream, callback) {[m
         if (callback) {[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/oauth2client.d.ts b/node_modules/google-auth-library/build/src/auth/oauth2client.d.ts[m
[1mindex ef317d0..063e6c7 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/oauth2client.d.ts[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/oauth2client.d.ts[m
[36m@@ -300,10 +300,70 @@[m [mexport interface VerifyIdTokenOptions {[m
     audience?: string | string[];[m
     maxExpiry?: number;[m
 }[m
[32m+[m[32mexport interface OAuth2ClientEndpoints {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The endpoint for viewing access token information[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://oauth2.googleapis.com/tokeninfo'[m
[32m+[m[32m     */[m
[32m+[m[32m    tokenInfoUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The base URL for auth endpoints.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://accounts.google.com/o/oauth2/v2/auth'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2AuthBaseUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The base endpoint for token retrieval[m
[32m+[m[32m     * .[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://oauth2.googleapis.com/token'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2TokenUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The base endpoint to revoke tokens.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://oauth2.googleapis.com/revoke'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2RevokeUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sign on certificates in PEM format.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://www.googleapis.com/oauth2/v1/certs'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2FederatedSignonPemCertsUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sign on certificates in JWK format.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://www.googleapis.com/oauth2/v3/certs'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2FederatedSignonJwkCertsUrl: string | URL;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * IAP Public Key URL.[m
[32m+[m[32m     * This URL contains a JSON dictionary that maps the `kid` claims to the public key values.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @example[m
[32m+[m[32m     * 'https://www.gstatic.com/iap/verify/public_key'[m
[32m+[m[32m     */[m
[32m+[m[32m    oauth2IapPublicKeyUrl: string | URL;[m
[32m+[m[32m}[m
 export interface OAuth2ClientOptions extends AuthClientOptions {[m
     clientId?: string;[m
     clientSecret?: string;[m
     redirectUri?: string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Customizable endpoints.[m
[32m+[m[32m     */[m
[32m+[m[32m    endpoints?: Partial<OAuth2ClientEndpoints>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The allowed OAuth2 token issuers.[m
[32m+[m[32m     */[m
[32m+[m[32m    issuers?: string[];[m
 }[m
 export type RefreshOptions = Pick<AuthClientOptions, 'eagerRefreshThresholdMillis' | 'forceRefreshOnFailure'>;[m
 export declare class OAuth2Client extends AuthClient {[m
[36m@@ -312,6 +372,8 @@[m [mexport declare class OAuth2Client extends AuthClient {[m
     private certificateExpiry;[m
     private certificateCacheFormat;[m
     protected refreshTokenPromises: Map<string, Promise<GetTokenResponse>>;[m
[32m+[m[32m    readonly endpoints: Readonly<OAuth2ClientEndpoints>;[m
[32m+[m[32m    readonly issuers: string[];[m
     _clientId?: string;[m
     _clientSecret?: string;[m
     apiKey?: string;[m
[36m@@ -328,43 +390,18 @@[m [mexport declare class OAuth2Client extends AuthClient {[m
      */[m
     constructor(options?: OAuth2ClientOptions);[m
     constructor(clientId?: string, clientSecret?: string, redirectUri?: string);[m
[31m-    protected static readonly GOOGLE_TOKEN_INFO_URL = "https://oauth2.googleapis.com/tokeninfo";[m
[31m-    /**[m
[31m-     * The base URL for auth endpoints.[m
[31m-     */[m
[31m-    private static readonly GOOGLE_OAUTH2_AUTH_BASE_URL_;[m
[31m-    /**[m
[31m-     * The base endpoint for token retrieval.[m
[31m-     */[m
[31m-    private static readonly GOOGLE_OAUTH2_TOKEN_URL_;[m
[31m-    /**[m
[31m-     * The base endpoint to revoke tokens.[m
[31m-     */[m
[31m-    private static readonly GOOGLE_OAUTH2_REVOKE_URL_;[m
     /**[m
[31m-     * Google Sign on certificates in PEM format.[m
[32m+[m[32m     * @deprecated use instance's {@link OAuth2Client.endpoints}[m
      */[m
[31m-    private static readonly GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_;[m
[31m-    /**[m
[31m-     * Google Sign on certificates in JWK format.[m
[31m-     */[m
[31m-    private static readonly GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_;[m
[31m-    /**[m
[31m-     * Google Sign on certificates in JWK format.[m
[31m-     */[m
[31m-    private static readonly GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_;[m
[32m+[m[32m    protected static readonly GOOGLE_TOKEN_INFO_URL = "https://oauth2.googleapis.com/tokeninfo";[m
     /**[m
      * Clock skew - five minutes in seconds[m
      */[m
     private static readonly CLOCK_SKEW_SECS_;[m
     /**[m
[31m-     * Max Token Lifetime is one day in seconds[m
[31m-     */[m
[31m-    private static readonly MAX_TOKEN_LIFETIME_SECS_;[m
[31m-    /**[m
[31m-     * The allowed oauth token issuers.[m
[32m+[m[32m     * The default max Token Lifetime is one day in seconds[m
      */[m
[31m-    private static readonly ISSUERS_;[m
[32m+[m[32m    private static readonly DEFAULT_MAX_TOKEN_LIFETIME_SECS_;[m
     /**[m
      * Generates URL for consent page landing.[m
      * @param opts Options.[m
[36m@@ -428,8 +465,16 @@[m [mexport declare class OAuth2Client extends AuthClient {[m
     /**[m
      * Generates an URL to revoke the given token.[m
      * @param token The existing token to be revoked.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @deprecated use instance method {@link OAuth2Client.getRevokeTokenURL}[m
      */[m
     static getRevokeTokenUrl(token: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a URL to revoke the given token.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param token The existing token to be revoked.[m
[32m+[m[32m     */[m
[32m+[m[32m    getRevokeTokenURL(token: string): URL;[m
     /**[m
      * Revokes the access given to token.[m
      * @param token The existing token to be revoked.[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/oauth2client.js b/node_modules/google-auth-library/build/src/auth/oauth2client.js[m
[1mindex 729cacb..6b4e4d1 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/oauth2client.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/oauth2client.js[m
[36m@@ -44,6 +44,21 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
         this._clientId = opts.clientId;[m
         this._clientSecret = opts.clientSecret;[m
         this.redirectUri = opts.redirectUri;[m
[32m+[m[32m        this.endpoints = {[m
[32m+[m[32m            tokenInfoUrl: 'https://oauth2.googleapis.com/tokeninfo',[m
[32m+[m[32m            oauth2AuthBaseUrl: 'https://accounts.google.com/o/oauth2/v2/auth',[m
[32m+[m[32m            oauth2TokenUrl: 'https://oauth2.googleapis.com/token',[m
[32m+[m[32m            oauth2RevokeUrl: 'https://oauth2.googleapis.com/revoke',[m
[32m+[m[32m            oauth2FederatedSignonPemCertsUrl: 'https://www.googleapis.com/oauth2/v1/certs',[m
[32m+[m[32m            oauth2FederatedSignonJwkCertsUrl: 'https://www.googleapis.com/oauth2/v3/certs',[m
[32m+[m[32m            oauth2IapPublicKeyUrl: 'https://www.gstatic.com/iap/verify/public_key',[m
[32m+[m[32m            ...opts.endpoints,[m
[32m+[m[32m        };[m
[32m+[m[32m        this.issuers = opts.issuers || [[m
[32m+[m[32m            'accounts.google.com',[m
[32m+[m[32m            'https://accounts.google.com',[m
[32m+[m[32m            this.universeDomain,[m
[32m+[m[32m        ];[m
     }[m
     /**[m
      * Generates URL for consent page landing.[m
[36m@@ -61,7 +76,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
         if (Array.isArray(opts.scope)) {[m
             opts.scope = opts.scope.join(' ');[m
         }[m
[31m-        const rootUrl = OAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_;[m
[32m+[m[32m        const rootUrl = this.endpoints.oauth2AuthBaseUrl.toString();[m
         return (rootUrl +[m
             '?' +[m
             querystring.stringify(opts));[m
[36m@@ -110,7 +125,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
         }[m
     }[m
     async getTokenAsync(options) {[m
[31m-        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;[m
[32m+[m[32m        const url = this.endpoints.oauth2TokenUrl.toString();[m
         const values = {[m
             code: options.code,[m
             client_id: options.client_id || this._clientId,[m
[36m@@ -162,7 +177,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
         if (!refreshToken) {[m
             throw new Error('No refresh token is set.');[m
         }[m
[31m-        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;[m
[32m+[m[32m        const url = this.endpoints.oauth2TokenUrl.toString();[m
         const data = {[m
             refresh_token: refreshToken,[m
             client_id: this._clientId,[m
[36m@@ -315,14 +330,25 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
     /**[m
      * Generates an URL to revoke the given token.[m
      * @param token The existing token to be revoked.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @deprecated use instance method {@link OAuth2Client.getRevokeTokenURL}[m
      */[m
     static getRevokeTokenUrl(token) {[m
[31m-        const parameters = querystring.stringify({ token });[m
[31m-        return `${OAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_}?${parameters}`;[m
[32m+[m[32m        return new OAuth2Client().getRevokeTokenURL(token).toString();[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a URL to revoke the given token.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param token The existing token to be revoked.[m
[32m+[m[32m     */[m
[32m+[m[32m    getRevokeTokenURL(token) {[m
[32m+[m[32m        const url = new URL(this.endpoints.oauth2RevokeUrl);[m
[32m+[m[32m        url.searchParams.append('token', token);[m
[32m+[m[32m        return url;[m
     }[m
     revokeToken(token, callback) {[m
         const opts = {[m
[31m-            url: OAuth2Client.getRevokeTokenUrl(token),[m
[32m+[m[32m            url: this.getRevokeTokenURL(token).toString(),[m
             method: 'POST',[m
         };[m
         if (callback) {[m
[36m@@ -452,7 +478,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
             throw new Error('The verifyIdToken method requires an ID Token');[m
         }[m
         const response = await this.getFederatedSignonCertsAsync();[m
[31m-        const login = await this.verifySignedJwtWithCertsAsync(options.idToken, response.certs, options.audience, OAuth2Client.ISSUERS_, options.maxExpiry);[m
[32m+[m[32m        const login = await this.verifySignedJwtWithCertsAsync(options.idToken, response.certs, options.audience, this.issuers, options.maxExpiry);[m
         return login;[m
     }[m
     /**[m
[36m@@ -469,7 +495,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
                 'Content-Type': 'application/x-www-form-urlencoded',[m
                 Authorization: `Bearer ${accessToken}`,[m
             },[m
[31m-            url: OAuth2Client.GOOGLE_TOKEN_INFO_URL,[m
[32m+[m[32m            url: this.endpoints.tokenInfoUrl.toString(),[m
         });[m
         const info = Object.assign({[m
             expiry_date: new Date().getTime() + data.expires_in * 1000,[m
[36m@@ -501,10 +527,10 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
         let url;[m
         switch (format) {[m
             case CertificateFormat.PEM:[m
[31m-                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_;[m
[32m+[m[32m                url = this.endpoints.oauth2FederatedSignonPemCertsUrl.toString();[m
                 break;[m
             case CertificateFormat.JWK:[m
[31m-                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_;[m
[32m+[m[32m                url = this.endpoints.oauth2FederatedSignonJwkCertsUrl.toString();[m
                 break;[m
             default:[m
                 throw new Error(`Unsupported certificate format ${format}`);[m
[36m@@ -558,7 +584,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
     }[m
     async getIapPublicKeysAsync() {[m
         let res;[m
[31m-        const url = OAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_;[m
[32m+[m[32m        const url = this.endpoints.oauth2IapPublicKeyUrl.toString();[m
         try {[m
             res = await this.transporter.request({ url });[m
         }[m
[36m@@ -588,7 +614,7 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
     async verifySignedJwtWithCertsAsync(jwt, certs, requiredAudience, issuers, maxExpiry) {[m
         const crypto = (0, crypto_1.createCrypto)();[m
         if (!maxExpiry) {[m
[31m-            maxExpiry = OAuth2Client.MAX_TOKEN_LIFETIME_SECS_;[m
[32m+[m[32m            maxExpiry = OAuth2Client.DEFAULT_MAX_TOKEN_LIFETIME_SECS_;[m
         }[m
         const segments = jwt.split('.');[m
         if (segments.length !== 3) {[m
[36m@@ -720,43 +746,15 @@[m [mclass OAuth2Client extends authclient_1.AuthClient {[m
     }[m
 }[m
 exports.OAuth2Client = OAuth2Client;[m
[31m-OAuth2Client.GOOGLE_TOKEN_INFO_URL = 'https://oauth2.googleapis.com/tokeninfo';[m
 /**[m
[31m- * The base URL for auth endpoints.[m
[32m+[m[32m * @deprecated use instance's {@link OAuth2Client.endpoints}[m
  */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_ = 'https://accounts.google.com/o/oauth2/v2/auth';[m
[31m-/**[m
[31m- * The base endpoint for token retrieval.[m
[31m- */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_ = 'https://oauth2.googleapis.com/token';[m
[31m-/**[m
[31m- * The base endpoint to revoke tokens.[m
[31m- */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_ = 'https://oauth2.googleapis.com/revoke';[m
[31m-/**[m
[31m- * Google Sign on certificates in PEM format.[m
[31m- */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v1/certs';[m
[31m-/**[m
[31m- * Google Sign on certificates in JWK format.[m
[31m- */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v3/certs';[m
[31m-/**[m
[31m- * Google Sign on certificates in JWK format.[m
[31m- */[m
[31m-OAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_ = 'https://www.gstatic.com/iap/verify/public_key';[m
[32m+[m[32mOAuth2Client.GOOGLE_TOKEN_INFO_URL = 'https://oauth2.googleapis.com/tokeninfo';[m
 /**[m
  * Clock skew - five minutes in seconds[m
  */[m
 OAuth2Client.CLOCK_SKEW_SECS_ = 300;[m
 /**[m
[31m- * Max Token Lifetime is one day in seconds[m
[31m- */[m
[31m-OAuth2Client.MAX_TOKEN_LIFETIME_SECS_ = 86400;[m
[31m-/**[m
[31m- * The allowed oauth token issuers.[m
[32m+[m[32m * The default max Token Lifetime is one day in seconds[m
  */[m
[31m-OAuth2Client.ISSUERS_ = [[m
[31m-    'accounts.google.com',[m
[31m-    'https://accounts.google.com',[m
[31m-];[m
[32m+[m[32mOAuth2Client.DEFAULT_MAX_TOKEN_LIFETIME_SECS_ = 86400;[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/refreshclient.js b/node_modules/google-auth-library/build/src/auth/refreshclient.js[m
[1mindex f32a03d..ef00cb5 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/refreshclient.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/refreshclient.js[m
[36m@@ -67,6 +67,7 @@[m [mclass UserRefreshClient extends oauth2client_1.OAuth2Client {[m
         this._refreshToken = json.refresh_token;[m
         this.credentials.refresh_token = json.refresh_token;[m
         this.quotaProjectId = json.quota_project_id;[m
[32m+[m[32m        this.universeDomain = json.universe_domain || this.universeDomain;[m
     }[m
     fromStream(inputStream, callback) {[m
         if (callback) {[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/stscredentials.d.ts b/node_modules/google-auth-library/build/src/auth/stscredentials.d.ts[m
[1mindex cbc3f95..4c9adf5 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/stscredentials.d.ts[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/stscredentials.d.ts[m
[36m@@ -94,7 +94,7 @@[m [mexport declare class StsCredentials extends OAuthClientAuthHandler {[m
      * @param clientAuthentication The client authentication credentials if[m
      *   available.[m
      */[m
[31m-    constructor(tokenExchangeEndpoint: string, clientAuthentication?: ClientAuthentication);[m
[32m+[m[32m    constructor(tokenExchangeEndpoint: string | URL, clientAuthentication?: ClientAuthentication);[m
     /**[m
      * Exchanges the provided token for another type of token based on the[m
      * rfc8693 spec.[m
[1mdiff --git a/node_modules/google-auth-library/build/src/auth/stscredentials.js b/node_modules/google-auth-library/build/src/auth/stscredentials.js[m
[1mindex 8b26b82..e8ca807 100644[m
[1m--- a/node_modules/google-auth-library/build/src/auth/stscredentials.js[m
[1m+++ b/node_modules/google-auth-library/build/src/auth/stscredentials.js[m
[36m@@ -78,7 +78,7 @@[m [mclass StsCredentials extends oauth2common_1.OAuthClientAuthHandler {[m
         // Inject additional STS headers if available.[m
         Object.assign(headers, additionalHeaders || {});[m
         const opts = {[m
[31m-            url: this.tokenExchangeEndpoint,[m
[32m+[m[32m            url: this.tokenExchangeEndpoint.toString(),[m
             method: 'POST',[m
             headers,[m
             data: querystring.stringify(values),[m
[1mdiff --git a/node_modules/google-auth-library/package.json b/node_modules/google-auth-library/package.json[m
[1mindex 663c658..939005c 100644[m
[1m--- a/node_modules/google-auth-library/package.json[m
[1m+++ b/node_modules/google-auth-library/package.json[m
[36m@@ -1,6 +1,6 @@[m
 {[m
   "name": "google-auth-library",[m
[31m-  "version": "9.5.0",[m
[32m+[m[32m  "version": "9.6.3",[m
   "author": "Google Inc.",[m
   "description": "Google APIs Authentication Client Library for Node.js",[m
   "engines": {[m
[36m@@ -47,7 +47,7 @@[m
     "karma-firefox-launcher": "^2.0.0",[m
     "karma-mocha": "^2.0.0",[m
     "karma-sourcemap-loader": "^0.4.0",[m
[31m-    "karma-webpack": "^5.0.0",[m
[32m+[m[32m    "karma-webpack": "5.0.0",[m
     "keypair": "^1.0.4",[m
     "linkinator": "^4.0.0",[m
     "mocha": "^9.2.2",[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 57ce76b..33d8b55 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -15,8 +15,9 @@[m
         "debug": "~2.6.9",[m
         "dotenv": "^16.4.1",[m
         "express": "~4.16.1",[m
[31m-        "google-auth-library": "^9.5.0",[m
[32m+[m[32m        "google-auth-library": "^9.6.3",[m
         "http-errors": "~1.6.3",[m
[32m+[m[32m        "jsonwebtoken": "^9.0.2",[m
         "morgan": "~1.9.1",[m
         "node-fetch": "^3.3.2",[m
         "pg": "^8.11.3",[m
[36m@@ -2864,9 +2865,9 @@[m
       }[m
     },[m
     "node_modules/google-auth-library": {[m
[31m-      "version": "9.5.0",[m
[31m-      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.5.0.tgz",[m
[31m-      "integrity": "sha512-OUbP509lWVlZxuMY+Cgomw49VzZFP9myIcVeYEpeBlbXJbPC4R+K4BmO9hd3ciYM5QIwm5W1PODcKjqxtkye9Q==",[m
[32m+[m[32m      "version": "9.6.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.6.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-4CacM29MLC2eT9Cey5GDVK4Q8t+MMp8+OEdOaqD9MG6b0dOyLORaaeJMPQ7EESVgm/+z5EKYyFLxgzBJlJgyHQ==",[m
       "dependencies": {[m
         "base64-js": "^1.3.0",[m
         "ecdsa-sig-formatter": "^1.0.11",[m
[36m@@ -3955,6 +3956,51 @@[m
         "node": ">=6"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/jsonwebtoken": {[m
[32m+[m[32m      "version": "9.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "jws": "^3.2.2",[m
[32m+[m[32m        "lodash.includes": "^4.3.0",[m
[32m+[m[32m        "lodash.isboolean": "^3.0.3",[m
[32m+[m[32m        "lodash.isinteger": "^4.0.4",[m
[32m+[m[32m        "lodash.isnumber": "^3.0.3",[m
[32m+[m[32m        "lodash.isplainobject": "^4.0.6",[m
[32m+[m[32m        "lodash.isstring": "^4.0.1",[m
[32m+[m[32m        "lodash.once": "^4.0.0",[m
[32m+[m[32m        "ms": "^2.1.1",[m
[32m+[m[32m        "semver": "^7.5.4"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=12",[m
[32m+[m[32m        "npm": ">=6"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/jwa": {[m
[32m+[m[32m      "version": "1.4.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "buffer-equal-constant-time": "1.0.1",[m
[32m+[m[32m        "ecdsa-sig-formatter": "1.0.11",[m
[32m+[m[32m        "safe-buffer": "^5.0.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/jws": {[m
[32m+[m[32m      "version": "3.2.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "jwa": "^1.4.1",[m
[32m+[m[32m        "safe-buffer": "^5.0.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/jsonwebtoken/node_modules/ms": {[m
[32m+[m[32m      "version": "2.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="[m
[32m+[m[32m    },[m
     "node_modules/jstransformer": {[m
       "version": "1.0.0",[m
       "resolved": "https://registry.npmjs.org/jstransformer/-/jstransformer-1.0.0.tgz",[m
[36m@@ -4043,12 +4089,47 @@[m
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",[m
       "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="[m
     },[m
[32m+[m[32m    "node_modules/lodash.includes": {[m
[32m+[m[32m      "version": "4.3.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isboolean": {[m
[32m+[m[32m      "version": "3.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isinteger": {[m
[32m+[m[32m      "version": "4.0.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isnumber": {[m
[32m+[m[32m      "version": "3.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isplainobject": {[m
[32m+[m[32m      "version": "4.0.6",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",[m
[32m+[m[32m      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/lodash.isstring": {[m
[32m+[m[32m      "version": "4.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="[m
[32m+[m[32m    },[m
     "node_modules/lodash.memoize": {[m
       "version": "4.1.2",[m
       "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",[m
       "integrity": "sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==",[m
       "dev": true[m
     },[m
[32m+[m[32m    "node_modules/lodash.once": {[m
[32m+[m[32m      "version": "4.1.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg=="[m
[32m+[m[32m    },[m
     "node_modules/longest": {[m
       "version": "1.0.1",[m
       "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",[m
[36m@@ -4061,7 +4142,6 @@[m
       "version": "6.0.0",[m
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",[m
       "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",[m
[31m-      "dev": true,[m
       "dependencies": {[m
         "yallist": "^4.0.0"[m
       },[m
[36m@@ -5021,7 +5101,6 @@[m
       "version": "7.6.0",[m
       "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.0.tgz",[m
       "integrity": "sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==",[m
[31m-      "dev": true,[m
       "dependencies": {[m
         "lru-cache": "^6.0.0"[m
       },[m
[36m@@ -5779,8 +5858,7 @@[m
     "node_modules/yallist": {[m
       "version": "4.0.0",[m
       "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",[m
[31m-      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",[m
[31m-      "dev": true[m
[32m+[m[32m      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="[m
     },[m
     "node_modules/yargs": {[m
       "version": "3.10.0",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 617bcfe..3f23ba1 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -16,8 +16,9 @@[m
     "debug": "~2.6.9",[m
     "dotenv": "^16.4.1",[m
     "express": "~4.16.1",[m
[31m-    "google-auth-library": "^9.5.0",[m
[32m+[m[32m    "google-auth-library": "^9.6.3",[m
     "http-errors": "~1.6.3",[m
[32m+[m[32m    "jsonwebtoken": "^9.0.2",[m
     "morgan": "~1.9.1",[m
     "node-fetch": "^3.3.2",[m
     "pg": "^8.11.3",[m
[1mdiff --git a/routes/oauthRoute.ts b/routes/oauthRoute.ts[m
[1mindex b823736..b627a7f 100644[m
[1m--- a/routes/oauthRoute.ts[m
[1m+++ b/routes/oauthRoute.ts[m
[36m@@ -1,32 +1,40 @@[m
 import express, { Request, Response } from 'express';[m
[31m-import user from "../models/ORM/User";[m
 const router = express.Router();[m
 const dotenv = require('dotenv');[m
 dotenv.config();[m
[32m+[m[32mconst jwt = require('jsonwebtoken');[m
 const { OAuth2Client } = require('google-auth-library');[m
 [m
[31m-// Define an interface for user data[m
[32m+[m[32m// Define an interface for google user data[m
 interface AppUserData {[m
     // id: number;[m
     firstName: string;[m
     lastName: string;[m
[31m-    username: string;[m
[31m-    password: string;[m
     email: string;[m
[31m-    birthDate: Date;[m
[31m-    gender: string;[m
[31m-    address: string;[m
[31m-    phoneNumber: string;[m
     registrationDate: Date;[m
     accountStatus: boolean;[m
     role: string;[m
 }[m
 [m
[32m+[m[32m// Caesar cipher encryption function for encode the userData as token to the front side[m
[32m+[m[32mfunction caesarCipher(text: string, shift: number): string {[m
[32m+[m[32m    return text[m
[32m+[m[32m        .split('')[m
[32m+[m[32m        .map(char => {[m
[32m+[m[32m            const code = char.charCodeAt(0);[m
[32m+[m[32m            if ((code >= 65 && code <= 90) || (code >= 97 && code <= 122)) {[m
[32m+[m[32m                return String.fromCharCode(((code - 65 + shift) % 26) + 65);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                return char;[m
[32m+[m[32m            }[m
[32m+[m[32m        })[m
[32m+[m[32m        .join('');[m
[32m+[m[32m}[m
[32m+[m
 // Function to fetch user data from Google API using the access token[m
 async function getUsersData(access_token: string) {[m
     const response = await fetch(`https://www.googleapis.com/oauth2/v3/userinfo?access_token=${access_token}`);[m
     const data = await response.json();[m
[31m-    // console.log('data', data);[m
     return data;[m
 }[m
 [m
[36m@@ -37,30 +45,24 @@[m [masync function sendUserData(userData: AppUserData) {[m
         let newUser = {[m
             "firstName": userData.firstName,[m
             "lastName": userData.lastName,[m
[31m-            "username": userData.username,[m
[31m-            "password": userData.password,[m
             "email": userData.email,[m
[31m-            "birthDate": userData.birthDate,[m
[31m-            "gender": userData.gender,[m
[31m-            "address": userData.address,[m
[31m-            "phoneNumber": userData.phoneNumber,[m
             "registrationDate": date.current,[m
             "accountStatus": true,[m
             "role": "user",[m
         };[m
 [m
[31m-        const response = await fetch('http://127.0.0.1:4000/users', {[m
[31m-            method: "POST",[m
[31m-            body: JSON.stringify(newUser),[m
[32m+[m[32m        const response = await fetch('http://127.0.0.1:4000/users/valid', {[m
[32m+[m[32m            method: "GET",[m
[32m+[m[32m            body: JSON.stringify(newUser.email),[m
             headers: {[m
                 'Content-Type': 'application/json'[m
             },[m
         });[m
 [m
         if (response.ok) {[m
[31m-            console.log('User data successfully sent.');[m
[32m+[m[32m            console.log('There is not a user with such an email, continue to register form.');[m
 [m
[31m-            return { username: newUser.username, password: newUser.password };[m
[32m+[m[32m            return {newUser };[m
         } else {[m
             console.error('Failed to send user data.');[m
             return null;[m
[36m@@ -81,13 +83,7 @@[m [mrouter.get('/', async function (req: Request, res: Response, next) {[m
         // id: 0,[m
         firstName: '',[m
         lastName: '',[m
[31m-        username: '',[m
[31m-        password: '123',[m
         email: '',[m
[31m-        birthDate: new Date('2000-01-01'), // Set birthDate to January 1, 2000[m
[31m-        gender: '---',[m
[31m-        address: '---',[m
[31m-        phoneNumber: '---',[m
         registrationDate: new Date(), // Set registrationDate to the current date[m
         accountStatus: true,[m
         role: 'user',[m
[36m@@ -103,9 +99,22 @@[m [mrouter.get('/', async function (req: Request, res: Response, next) {[m
             redirectUrl[m
         );[m
 [m
[32m+[m[32m        // Set the scope to include email[m
[32m+[m[32m        const scopes = ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile'];[m
[32m+[m
[32m+[m[32m        // Generate the URL for Google OAuth2 consent screen[m
[32m+[m[32m        const authUrl = oAuth2Client.generateAuthUrl({[m
[32m+[m[32m            access_type: 'offline',[m
[32m+[m[32m            scope: scopes,[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m
         // Obtaining tokens using the authorization code[m
         const tokenResponse = await oAuth2Client.getToken(code);[m
 [m
[32m+[m[32m        // Extracting id token from the tokenResponse[m
[32m+[m[32m        const idToken = tokenResponse.tokens.id_token;[m
[32m+[m
         // Setting the obtained tokens as credentials for the OAuth2 client[m
         await oAuth2Client.setCredentials(tokenResponse.tokens);[m
         console.log('Tokens acquired');[m
[36m@@ -114,36 +123,54 @@[m [mrouter.get('/', async function (req: Request, res: Response, next) {[m
         const user = oAuth2Client.credentials;[m
         console.log('credentials', user);[m
 [m
[32m+[m[32m        const ticket = await oAuth2Client.verifyIdToken({idToken:user.id_token,audience:process.env.CLIENT_ID,});[m
[32m+[m
[32m+[m[32m        console.log('ticket',ticket);[m
[32m+[m
[32m+[m[32m        // Access the payload of the ticket[m
[32m+[m[32m        const payload = ticket.getPayload();[m
[32m+[m
[32m+[m[32m        // Extract the email from the payload[m
[32m+[m[32m        const email = payload['email'];[m
[32m+[m
[32m+[m[32m        console.log('User email:', email);[m
[32m+[m
         // Fetching user data using the obtained access token[m
         const googleUserData = await getUsersData(user.access_token);[m
         console.log("Google user data is: ",googleUserData);[m
[32m+[m[32m        console.log('ticket', ticket);[m
[32m+[m[32m        console.log('email', email);[m
 [m
         appUserData = {[m
             // id: 0,[m
             firstName: googleUserData.given_name,[m
             lastName: googleUserData.family_name,[m
[31m-            username: `${googleUserData.given_name}${googleUserData.family_name}`,[m
[31m-            password: '123',[m
[31m-            email: `${googleUserData.given_name}${googleUserData.family_name}@gmail.com`,[m
[31m-            birthDate: new Date('2000-01-01'), // Set birthDate to January 1, 2000[m
[31m-            gender: '---',[m
[31m-            address: '---',[m
[31m-            phoneNumber: '---',[m
[32m+[m[32m            email: email,[m
             registrationDate: new Date(), // Set registrationDate to the current date[m
             accountStatus: true,[m
             role: 'user',[m
         }[m
 [m
[31m-        // req.body.userData = appUserData;[m
 [m
     } catch (error) {[m
         console.log('Error with signing in with Google.', error);[m
     } finally {[m
[31m-        const createdUser = await sendUserData(appUserData);[m
[32m+[m[32m        const isNewUser = await sendUserData(appUserData);[m
[32m+[m
[32m+[m[32m        if (isNewUser) {[m
[32m+[m[32m            window.alert('Google user verification was successfully performed, you are forwarded to further registration.');[m
[32m+[m
[32m+[m[32m            // Define secret key for the token which will be send to front side with user data[m
[32m+[m[32m            const secretKey = 'CAESARCODE'; // Caesar cipher key[m
[32m+[m
[32m+[m[32m            // Generate a JWT token with user details[m
[32m+[m[32m            const token = jwt.sign({ appUserData }, caesarCipher(secretKey, 3), { expiresIn: '1h' });[m
[32m+[m
[32m+[m[32m            // Send the token to the frontend[m
[32m+[m[32m            res.json({ token });[m
 [m
[31m-        if (createdUser) {[m
[31m-            window.alert('User registered successfully! Please log in.');[m
[31m-            res.redirect(`http://127.0.0.1:3000/login}`);[m
[32m+[m[32m            // Redirect to the frontend login page with the token as a query parameter[m
[32m+[m[32m            res.redirect(`http://127.0.0.1:3000/SignIn?token=${token}`);[m
         }[m
     }[m
 });[m
[1mdiff --git a/routes/requestRoute.ts b/routes/requestRoute.ts[m
[1mindex 62d5b6d..01f2325 100644[m
[1m--- a/routes/requestRoute.ts[m
[1m+++ b/routes/requestRoute.ts[m
[36m@@ -25,7 +25,8 @@[m [mrequestsRoute.post('/', async (req: Request, res: Response, next) => {[m
     // Use oAuth2Client to generate the URL that will be used to initiate the Google authentication[m
     const authorizeUrl = oAuth2Client.generateAuthUrl({[m
         access_type: 'offline',[m
[31m-        scope: 'https://www.googleapis.com/auth/userinfo.profile openid',[m
[32m+[m[32m        // scope: 'https://www.googleapis.com/auth/userinfo.profile openid',[m
[32m+[m[32m        scope: 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email',[m
         prompt: 'consent'[m
     });[m
 [m
[1mdiff --git a/routes/usersRoute.ts b/routes/usersRoute.ts[m
[1mindex 857a4a9..92a6c63 100644[m
[1m--- a/routes/usersRoute.ts[m
[1m+++ b/routes/usersRoute.ts[m
[36m@@ -6,6 +6,8 @@[m [mimport { UserRepository } from '../dal/UserRepository';[m
 const usersRoute = express.Router();[m
 const userController = new UserController(new UserBL(new UserRepository()));[m
 [m
[32m+[m[32musersRoute.get('/valid', async (req: Request, res: Response) => await userController.checkUserIsValid(req, res));[m
[32m+[m
 usersRoute.post('/', async (req: Request, res: Response) => await userController.addUser(req, res));[m
 [m
 usersRoute.get('/:id', async (req: Request, res: Response) => await userController.getUser(req, res));[m
[36m@@ -19,4 +21,6 @@[m [musersRoute.delete('/:id', async (req: Request, res: Response) => await userContr[m
 usersRoute.post('/login', async (req: Request, res: Response) => await userController.getUserByLogin(req, res));[m
 [m
 [m
[32m+[m
[32m+[m
 export default usersRoute;[m
[1mdiff --git a/utils/InMemoryDB.ts b/utils/InMemoryDB.ts[m
[1mindex 22dbcc8..8f61cbd 100644[m
[1m--- a/utils/InMemoryDB.ts[m
[1m+++ b/utils/InMemoryDB.ts[m
[36m@@ -41,6 +41,26 @@[m [mclass InMemoryDB {[m
     deletePost(id: number) {[m
         this.posts.delete(id);[m
     }[m
[32m+[m
[32m+[m[32m    // getPosts(): [str] {[m
[32m+[m[32m    //     const posts = ["flower are the best", "banana is yellow", "apple is not only fruit", "AI of google is the best", "Chatgpt AI wants to be the best too"];[m
[32m+[m[32m    //     // @ts-ignore[m
[32m+[m[32m    //     return posts;[m
[32m+[m[32m    //[m
[32m+[m[32m    // }[m
[32m+[m
[32m+[m[32m    // searchNave(textFilter: string): Boolean {[m
[32m+[m[32m    // const posts = getPosts();[m
[32m+[m[32m    // result = [];[m
[32m+[m[32m    // for (let i = 0; i < posts.length; i++) {[m
[32m+[m[32m    //     for (let word = 0; word < post.length; word++) {[m
[32m+[m[32m    //         if (textFilter === word):[m
[32m+[m[32m    //         {[m
[32m+[m[32m    //             result.push(post);[m
[32m+[m[32m    //         }[m
[32m+[m[32m    //     }[m
[32m+[m[32m    // }[m
[32m+[m[32m    // return result;[m
 }[m
 [m
 export default InMemoryDB;[m
\ No newline at end of file[m
